@page "/Stations/StationConfig"
@attribute [Authorize]
@using Microsoft.AspNetCore.Authorization
@using MudBlazor
@using SmartPPC.Api.Services
@using SmartPPC.Core.Model.DDMRP
@inject ConfigurationService ConfigService
@inject ConfigurationStateService StateService
@inject ILogger<StationConfig> Logger

<h1>Station Configuration</h1>

@if (!StateService.HasConfiguration)
{
    <MudAlert Severity="Severity.Warning" Class="mb-4">
        <MudText Typo="Typo.body1">
            <strong>No configuration is currently loaded.</strong>
        </MudText>
        <MudText Typo="Typo.body2" Class="mt-2">
            Please load or create a configuration from the <MudLink Href="/">Dashboard</MudLink> before configuring stations.
            You can view the default settings below, but changes will not be saved until a configuration is loaded.
        </MudText>
    </MudAlert>
}

@if (ErrorMessage != null)
{
    <MudAlert Severity="Severity.Error" Class="mb-4">@ErrorMessage</MudAlert>
}

@if (SuccessMessage != null)
{
    <MudAlert Severity="Severity.Success" Class="mb-4">@SuccessMessage</MudAlert>
}

<StationConfigComponent ModelInputs="ModelInputs" />

@code {
    private ModelInputs ModelInputs { get; set; } = new ModelInputs();
    private string? ErrorMessage { get; set; }
    private string? SuccessMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Get configuration from state service
            if (StateService.HasConfiguration && StateService.CurrentConfiguration != null)
            {
                ModelInputs = StateService.CurrentConfiguration;
            }
            else
            {
                // No configuration loaded - show default values but warn user
                ModelInputs = ConfigService.CreateDefaultConfiguration();
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error loading configuration");
            ErrorMessage = "Error loading configuration. Using default values.";
            ModelInputs = ConfigService.CreateDefaultConfiguration();
        }
    }
}
