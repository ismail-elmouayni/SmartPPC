@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
        <MudText Typo="Typo.h6" Class="ml-3">SmartPPC</MudText>
        <MudSpacer />
        <MudIconButton Icon="@((_isDarkMode ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode))"
                       Color="Color.Inherit"
                       OnClick="@ToggleDarkMode"
                       Title="Toggle Dark Mode" />
    </MudAppBar>

    <MudDrawer @bind-Open="@_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <MudNavMenu>
            <MudText Typo="Typo.h6" Class="px-4 py-3">Navigation</MudText>
            <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Dashboard">Dashboard</MudNavLink>
            <MudNavLink Href="/Settings/GeneralSettings" Icon="@Icons.Material.Filled.Settings">General Settings</MudNavLink>
            <MudNavLink Href="/Stations/StationConfig" Icon="@Icons.Material.Filled.AccountTree">Station Configuration</MudNavLink>
            <MudNavLink Href="/Forecast/DemandForecast" Icon="@Icons.Material.Filled.TrendingUp">Demand Forecast</MudNavLink>
            <MudNavLink Href="/SolverPage" Icon="@Icons.Material.Filled.PlayArrow">Solver</MudNavLink>
        </MudNavMenu>
    </MudDrawer>

    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="mt-4 mb-8">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private MudThemeProvider? _mudThemeProvider;
    private bool _isDarkMode = false;
    private bool _drawerOpen = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && _mudThemeProvider != null)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }

    private void ToggleDarkMode()
    {
        _isDarkMode = !_isDarkMode;
    }

    private void ToggleDrawer()
    {
        _drawerOpen = !_drawerOpen;
    }
}
